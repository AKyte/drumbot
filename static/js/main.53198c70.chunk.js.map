{"version":3,"sources":["SamplePlayer.js","SoundPlayer.js","AudioEngine.js","DrumMachine.js","App.js","serviceWorker.js","index.js"],"names":["SamplePlayer","buffer","Object","classCallCheck","this","context","_ref","timing","destination","source","createBufferSource","connect","start","samples","SoundPlayer","_this","prepare","Promise","all","map","sample","loadSample","instrument","url","concat","resolve","reject","request","XMLHttpRequest","open","responseType","onload","audioData","response","decodeAudioData","instruments","send","player","gainNode","createGain","gain","setValueAtTime","play","defaultPosition","absolute","measure","step","time","WebAudioCtor","window","AudioContext","webkitAudioContext","createNewContext","AudioEngine","onStep","soundPlayer","startClock","beatsPerMinute","stepsPerSecond","playing","scheduleSounds","getPosition","resume","onTick","stopClock","position","suspend","close","currentStepAbsolute","getStepAbsolute","currentTime","setCurrentStepAbsolute","requestAnimationFrame","pattern","tracks","forEach","track","steps","test","navigator","userAgent","sampleRate","createBuffer","dummy","disconnect","initializeFirstContext","Math","floor","absoluteStepCount","stepCount","apiHost","process","REACT_APP_API_HOST","DrumMachine","state","poweredOn","loading","startTime","powerOn","audioEngine","then","fetch","r","json","patterns","setState","randomIndex","random","length","selectPattern","err","error","nextPattern","patternIndex","previousPattern","index","_this2","name","setPattern","react_default","a","createElement","className","onClick","_this$state","_this$state$pattern","Fragment","disabled","trackIndex","key","trackStep","i","href","React","Component","App","DrumMachine_DrumMachine","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53198c70.chunk.js","sourcesContent":["// Play a sample loaded from a file\nexport default class SamplePlayer {\n  constructor(buffer) {\n    this.buffer = buffer;\n  }\n\n  play({ context, timing, destination }) {\n    const source = context.createBufferSource();\n\n    source.buffer = this.buffer;\n    source.connect(destination);\n    source.start(timing);\n  }\n}\n","import SamplePlayer from './SamplePlayer';\n\nconst samples = [\n  'clap',\n  'cowbell',\n  'kick',\n  'snare',\n  'hihat',\n  'ride',\n  'rim'\n ];\n\nexport default class SoundPlayer {\n  constructor() {\n    this.instruments = {};\n  }\n\n  prepare = (context) => {\n    // load all samples\n    return Promise.all(samples.map(sample => this.loadSample(context, sample)))\n  }\n\n  loadSample = (context, instrument) => {\n    const url = `./samples/${instrument}.wav`;\n    return new Promise((resolve, reject) => {\n      var request = new XMLHttpRequest();\n\n      request.open('GET', url, true);\n\n      request.responseType = 'arraybuffer';\n\n      request.onload =  () => {\n        var audioData = request.response;\n\n        context.decodeAudioData(audioData, (buffer) => {\n          this.instruments[instrument] = new SamplePlayer(buffer);\n          resolve();\n        }, reject);\n      };\n\n      request.send();\n    });\n  }\n\n  play({\n    context,\n    instrument,\n    timing\n  }) {\n    const player = this.instruments[instrument];\n    const gainNode = context.createGain();\n    gainNode.gain.setValueAtTime(0.1, timing);\n    gainNode.connect(context.destination);\n\n    if (player) player.play({context, timing, destination: gainNode});\n  }\n}\n","import SoundPlayer from './SoundPlayer';\n\nconst defaultPosition = {\n  absolute: -1,\n  measure: -1,\n  step: -1,\n  time: -1\n};\nconst WebAudioCtor = window.AudioContext || window.webkitAudioContext;\n\nfunction initializeFirstContext() {\n  const desiredSampleRate = 44100;\n\n  var context = createNewContext()\n\n  // in iOS, need to set the sample rate after initializing a context\n  // SEE: https://stackoverflow.com/questions/29901577/distorted-audio-in-ios-7-1-with-webaudio-api\n  if (/(iPhone|iPad)/i.test(navigator.userAgent) && context.sampleRate !== desiredSampleRate) {\n    const buffer = context.createBuffer(1, 1, desiredSampleRate)\n    const dummy = context.createBufferSource()\n    dummy.buffer = buffer\n    dummy.connect(context.destination)\n    dummy.start(0)\n    dummy.disconnect()\n\n    context.close() // dispose old context\n    return createNewContext();\n  }\n\n  return context\n}\n\nfunction createNewContext() {\n  return new WebAudioCtor();\n}\n\nconst leaderTime = 0.25;\n\nexport const browserSupportsWebAudio = () => !!WebAudioCtor;\n\nexport default class AudioEngine {\n  constructor({ onStep }) {\n    this.onStep = onStep;\n    this.position = defaultPosition;\n    this.context = initializeFirstContext();\n    this.soundPlayer = new SoundPlayer();\n  }\n\n\n  prepare = () => this.soundPlayer.prepare(this.context);\n\n  setPattern(pattern) {\n    this.pattern = pattern;\n  }\n\n  startClock = (beatsPerMinute) => {\n    this.stepsPerSecond = beatsPerMinute / 60 * 4;\n    this.context = createNewContext();\n\n    this.playing = true;\n    this.scheduleSounds(this.getPosition(0));\n    this.context.resume();\n\n    this.onTick();\n  }\n\n  stopClock = () => {\n    this.playing = false;\n    this.position = defaultPosition;\n\n    this.context.suspend();\n    this.context.close();\n  }\n\n  onTick = () => {\n    const currentStepAbsolute = this.getStepAbsolute(this.context.currentTime);\n    if (currentStepAbsolute !== this.position.absolute) {\n      this.setCurrentStepAbsolute(currentStepAbsolute);\n    }\n    if (this.playing) {\n      requestAnimationFrame(this.onTick);\n    }\n    else {\n      this.position = defaultPosition;\n      this.onStep({ position: this.position});\n    }\n  }\n\n  getStepAbsolute(timing) {\n    return Math.floor((timing - leaderTime) * this.stepsPerSecond);\n  }\n\n  setCurrentStepAbsolute(absoluteStepCount) {\n    this.onStep({ position: this.getPosition(absoluteStepCount)});\n\n    // schedule the sounds one beat ahead so the timing is exact\n    this.scheduleSounds(this.getPosition(absoluteStepCount + 1));\n  }\n\n  getPosition(absoluteStepCount) {\n    const { stepCount } = this.pattern;\n    return {\n      measure: Math.floor(absoluteStepCount / stepCount),\n      step: absoluteStepCount % stepCount,\n      timing: absoluteStepCount / this.stepsPerSecond + leaderTime,\n      absolute: absoluteStepCount\n    }\n  }\n\n  scheduleSounds = (position) =>  {\n    if (!this.playing) return;\n    this.pattern.tracks.forEach(track => {\n      if (track.steps[position.step]) {\n        this.soundPlayer.play({\n          context: this.context,\n          instrument: track.instrument,\n          timing: position.timing\n        });\n      }\n    });\n  }\n}\n","import React from 'react';\nimport './DrumMachine.css';\nimport { fetch } from 'whatwg-fetch';\nimport AudioEngine, {browserSupportsWebAudio } from './AudioEngine';\nconst apiHost = process.env.REACT_APP_API_HOST || 'https://api.noopschallenge.com';\n\nexport default class DrumMachine extends React.Component {\n  state = {\n    poweredOn: false,\n    loading: true,\n    playing: false,\n    startTime: 0,\n    position: {},\n    pattern: {\n      tracks: []\n    }\n  };\n\n  componentDidMount() {\n    if (!browserSupportsWebAudio()) {\n      return this.setState({\n        loading: false,\n        error: 'This browser does not support WebAudio. Try Edge, Firefox, Chrome or Safari.'\n      });\n    }\n  }\n\n  powerOn = () => {\n    this.audioEngine = new AudioEngine({ onStep: this.onStep});\n    this.audioEngine.prepare().then(() =>\n      fetch(`${apiHost}/drumbot/patterns`).then(r => r.json()).then(\n        patterns => {\n          this.setState({ patterns, poweredOn: true }, () => {\n            const randomIndex = Math.floor(Math.random() * patterns.length);\n            this.selectPattern(randomIndex)\n          });\n        },\n        err => {\n          this.setState({ error: 'Oops. Something went wrong. Please check your connection and refresh your browser.', loading: false });\n        }\n    ), error => {\n      this.setState({ error: true, loading: false });\n    });\n  }\n\n  startClock = () => {\n    this.audioEngine.startClock(this.state.pattern.beatsPerMinute);\n\n    this.setState({ playing: true });\n  }\n  stopClock = () => {\n    this.audioEngine.stopClock();\n\n    this.setState({ playing: false});\n  }\n\n  onStep = ({\n    position,\n  }) => {\n    this.setState({ position });\n  }\n\n  selectPattern(index) {\n    if (index < 0) index = this.state.patterns.length - 1;\n    if (index >= this.state.patterns.length) index = 0;\n    const pattern = this.state.patterns[index]\n    if (this.state.playing) {\n      this.stopClock();\n    }\n\n\n    fetch(`${apiHost}/drumbot/patterns/${pattern.name}`).then(r => r.json()).then(\n      pattern => {\n        this.setState({ pattern, patternIndex: index, loading: false });\n        this.audioEngine.setPattern(pattern);\n      }\n    );\n  }\n\n  nextPattern = () => {\n    this.selectPattern(this.state.patternIndex + 1);\n  }\n\n  previousPattern = () => {\n    this.selectPattern(this.state.patternIndex - 1);\n  }\n\n  render() {\n\n    if (this.state.error) return (\n      <div className='DrumMachine__Error'>\n        {this.state.error}\n      </div>\n    );\n\n    if (!this.state.poweredOn) {\n      return (\n        <div className='DrumMachine'>\n          <div className='DrumMachine__GetStarted'>\n            <p>Welcome to drumbot</p>\n            <button className='DrumMachine__StartStopButton' onClick={this.powerOn}>Start!</button>\n          </div>\n        </div>\n      );\n    }\n\n    const { pattern: { tracks, name }, position: { step } } = this.state;\n\n    return (\n      <div className='DrumMachine'>\n        <div className='DrumMachine__TopPanel'>\n          <div className=\"DrumMachine__Logo\">\n            <div className=\"DrumMachine__Title\">\n              PR-606\n            </div>\n            <div className=\"DrumMachine__SubTitle\">\n              FORKABLE DRUM COMPUTER\n            </div>\n          </div>\n          {this.state.poweredOn && (\n            <>\n              <div className='DrumMachine__PatternSelector'>\n                <div className='DrumMachine__PatternButton'>\n                  <button onClick={this.previousPattern}>&lt;</button>\n                </div>\n                <div className='DrumMachine__SelectedPattern'>\n                  {name}\n                </div>\n                <div className='DrumMachine__PatternButton'>\n                  <button onClick={this.nextPattern}>&gt;</button>\n                </div>\n              </div>\n              <div className='DrumMachine__Transport'>\n                <button disabled={this.state.playing} className='DrumMachine__StartStopButton' onClick={this.startClock}>Start</button>\n                <button disabled={!this.state.playing} className='DrumMachine__StartStopButton' onClick={this.stopClock}>Stop</button>\n              </div>\n            </>\n          )}\n        </div>\n\n        <div className='DrumMachine__Tracks'>\n          {tracks.map((track, trackIndex) => (\n            <div className='DrumMachine__Track' key={trackIndex}>\n              <div className='DrumMachine__TrackLabel'>{track.instrument}</div>\n              <div className='DrumMachine__TrackSteps'>\n                {track.steps.map((trackStep, i) => (\n                  <div className={`DrumMachine__Step DrumMachine__Step--${step === i ? 'Active' : 'Inactive'} DrumMachine__Step--${trackStep ? 'On' : 'Off'}`} key={i}>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        <div className='DrumMachine__Footer'>\n          <div>Join the fun at <a href='https://noopschallenge.com'>noopschallenge.com</a></div>\n          <div><a href='https://github.com/noops-challenge/drumbot'>Fork me on GitHub</a></div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport DrumMachine from './DrumMachine';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DrumMachine />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}